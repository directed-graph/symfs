syntax = "proto3";

package everchanging.symfs.ext;

// For testing purposes.
// Next tag: 5
message TestMessage {
  // Next tag: 2
  message InnerTestMessage {
    string value = 1;
    repeated string rv = 2;
  }
  string s = 1;
  repeated string rs = 2;
  InnerTestMessage m = 3;
  repeated InnerTestMessage rm = 4;
}

// A generic message for media.
// Next tag: 9
message Media {
  // A unique identifier to identify the media.
  string id = 1;

  // The title of the media.
  string title = 2;

  // The casts in the media.
  repeated string casts = 3;

  // The studio that made the media.
  string studio = 4;

  // When the media was released.
  string release = 5;

  // Tags for the media.
  repeated string tags = 6;

  // The genre for the media.
  repeated string genre = 7;

  // The sources from which this media was obtained.
  repeated string sources = 8;
}

// A generic message for financial statements.
// Next tag: 4
message FinancialStatement {
  // For use with derived_metadata.financials.from_statement_path in
  // everchanging.symfs.Config.DerivedMetadata.parameters.
  message Parameters {
    // Additional formats passed to time.strptime to try if parsing fails.
    repeated string additional_formats = 1;
  }

  // Using strings so we can prepend 0s directly in metadata.
  message Date {
    string year = 1;
    string month = 2;
    string day = 3;
  }
  // The institution.
  string institution = 1;

  // The account identifier or name.
  string account = 2;

  // The statement date
  Date date = 3;
}

// A generic message for holding values.
// Next tag: 2
message GenericValues {
  // For use with derived_metadata.generic_values.FixedGrouping in
  // everchanging.symfs.Config.DerivedMetadata.parameters.
  //
  // Each item will be put into one or more groups, determined by the `number`
  // field. Each group will be of similar size (maximal difference of 1 item).
  //
  // Next tag: 4
  message FixedGroupingParameters {
    // The number of groups in total. Defaults to 10.
    int64 num_groups = 1;

    // The number of groups each item should belong to. Defaults to 1.
    int64 per_group = 2;

    // Whether or not to randomize the grouping. Note that even if this is
    // false, the grouping will depend on the order of the items scanned, which
    // is not necessarily deterministic.
    bool random = 3;
  }

  repeated int64 numbers = 1;
}
